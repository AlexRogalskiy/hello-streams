version = '0.0.1-SNAPSHOT'

ext {
    appName = 'hello-flink'
    mainClass = 'io.amient.flink'
    javaVersion = '1.8'
    scalaVersion = '2.11.7'
    baseScalaVersion = scalaVersion.split("\\.\\d+\$")[0]
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

sourceCompatibility = javaVersion

jar {
    manifest {
        attributes 'Main-Class': mainClass
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

configurations {
    provided
    testCompile.extendsFrom provided
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main {
        compileClasspath += [configurations.provided]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}
test.dependsOn scalaTest
test.systemProperties 'property': 'value'

dependencies {
    compile 'org.scala-lang:scala-library:' + scalaVersion
    compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.6'
    compile group: 'org.slf4j', name:'slf4j-log4j12', version: '1.7.6'

    compile group: 'org.apache.flink', name: 'flink-core', version: '1.1.0'
    compile group: 'net.sourceforge.htmlcleaner', name: 'htmlcleaner', version: '2.6.1'

    testCompile group: 'org.scalatest', name: 'scalatest_' + baseScalaVersion, version: '2.2.6'
    testCompile group: 'org.scalacheck', name: 'scalacheck_' + baseScalaVersion, version: '1.12.5'
}


task createStartScripts(type: CreateStartScripts) {
    outputDir = file("build/scripts")
    mainClassName = mainClass
    applicationName = appName
    classpath = jar.outputs.files
}

build.dependsOn createStartScripts
libsDirName = 'lib'

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

